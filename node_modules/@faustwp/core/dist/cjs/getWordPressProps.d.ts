/// <reference types="react" />
import { GetServerSidePropsContext, GetStaticPropsContext } from 'next';
import type { DocumentNode } from 'graphql';
import { SeedNode } from './queries/seedQuery.js';
import { FaustTemplateProps } from './components/WordPressTemplate.js';
export declare const DEFAULT_ISR_REVALIDATE: number;
export type WordPressTemplate = React.FC & {
    query?: DocumentNode;
    variables?: (seedNode: SeedNode, context?: {
        asPreview?: boolean;
        locale?: string;
    }, extra?: Record<string, unknown>) => {
        [key: string]: any;
    };
};
export interface FaustTemplate<Data> extends React.FC<FaustTemplateProps<Data>> {
    query?: WordPressTemplate['query'];
    variables?: WordPressTemplate['variables'];
}
export interface GetWordPressPropsConfig<Props = Record<string, unknown>> {
    ctx: GetServerSidePropsContext | GetStaticPropsContext;
    props?: Props;
    revalidate?: number | boolean;
    /**
     * Provide extra parameters for the Page.variables function call.
     */
    extra?: Props;
}
export declare function getWordPressProps(options: GetWordPressPropsConfig): Promise<{
    props: {
        [key: string]: any;
    };
    revalidate?: number | boolean | undefined;
} | {
    notFound: true;
}>;
